[gd_scene load_steps=3 format=3 uid="uid://btmhl4dpc260n"]

[ext_resource type="Texture2D" uid="uid://f5amv6ot7myy" path="res://Images/NoImage.png" id="3"]

[sub_resource type="GDScript" id="1"]
script/source = "extends Control

var images := -1

func _ready():
	$Container/GeneralInfo.text = \"\"
	Utils.dir_watcher.files_created.connect(files_changed)
	Utils.dir_watcher.files_modified.connect(files_changed)
	Utils.dir_watcher.files_deleted.connect(files_changed)

func add_info(info: String):
	$Container/GeneralInfo.text += tr(info) + \"\\n\"

func add_image(iname: String):
	images += 1
	
	if images > 0:
		$Container.add_child(get_image(0).duplicate())
	
	get_image(images).set_meta(\"image_name\", iname)
	get_image(images).get_node(\"ImageHeader/ImageName\").text = iname
	get_image(images).get_node(\"ImageInfo\").text = \"\"
	
	update_image(images)
	
	get_image(images).get_node(\"Template/TemplateButton\").pressed.connect(get_parent().fetch_template.bind(iname, self, images))
	get_parent().add_customizable_image(iname)

func add_image_info(info: String, format := []):
	var new_line = (\"\" if get_image(images).get_node(\"ImageInfo\").text.length() == 0 else \"\\n\")
	
	if format:
		info = tr(info) % format
	else:
		info = tr(info)
	
	get_image(images).get_node(\"ImageInfo\").text += new_line + info

func get_image(i) -> Control:
	return $Container.get_child(i + 2) as Control

func update_image(idx: int):
	var image_container := get_image(idx)
	var tex := Utils.load_texture(HWTheme.get_theme_path().path_join(image_container.get_meta(\"image_name\")), true)
	
	if tex:
		image_container.get_node(\"Image\").texture = tex
		image_container.get_node(\"Template\").hide()
	else:
		image_container.get_node(\"Image\").texture = preload(\"res://Images/NoImage.png\")
		image_container.get_node(\"Template\").show()

func files_changed(file_list: Array):
	for file in file_list:
		var file_name: String = file.get_file()
		for idx in images + 1:
			if get_image(idx).get_meta(\"image_name\") == file_name:
				update_image(idx)
				break
"

[node name="CustomizationPanel" type="PanelContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource("1")

[node name="Container" type="VBoxContainer" parent="."]
layout_mode = 2

[node name="GroupName" type="Label" parent="Container"]
layout_mode = 2
theme_type_variation = &"Section"
text = "Group name"
horizontal_alignment = 1
vertical_alignment = 1

[node name="GeneralInfo" type="Label" parent="Container"]
layout_mode = 2
text = "Multiline general info"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Image" type="VBoxContainer" parent="Container"]
layout_mode = 2
alignment = 1

[node name="ImageHeader" type="HBoxContainer" parent="Container/Image"]
layout_mode = 2

[node name="HSeparator" type="HSeparator" parent="Container/Image/ImageHeader"]
layout_mode = 2
size_flags_horizontal = 3

[node name="ImageName" type="Label" parent="Container/Image/ImageHeader"]
layout_mode = 2
theme_type_variation = &"Subsection"
text = "Image name"
horizontal_alignment = 1
vertical_alignment = 1

[node name="HSeparator2" type="HSeparator" parent="Container/Image/ImageHeader"]
layout_mode = 2
size_flags_horizontal = 3

[node name="ImageInfo" type="Label" parent="Container/Image"]
layout_mode = 2
text = "Multiline image info"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Image" type="TextureRect" parent="Container/Image"]
layout_mode = 2
texture = ExtResource("3")
stretch_mode = 3

[node name="Template" type="HBoxContainer" parent="Container/Image"]
layout_mode = 2

[node name="HSeparator" type="Control" parent="Container/Image/Template"]
layout_mode = 2
size_flags_horizontal = 3

[node name="TemplateButton" type="Button" parent="Container/Image/Template"]
layout_mode = 2
text = "Fetch template"

[node name="HSeparator2" type="Control" parent="Container/Image/Template"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Space" type="Control" parent="Container/Image"]
custom_minimum_size = Vector2(0, 16)
layout_mode = 2
